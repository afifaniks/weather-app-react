{"version":3,"sources":["weather.js","components/navbar.js","components/overview.js","components/dashboard.js","App.js","index.js"],"names":["Weather","fetch","then","response","json","data","console","log","Component","MyNav","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Overview","time","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","Media","object","src","this","icon","style","height","width","temp","description","location","country","coordinates","wind","humidity","timestampConverter","sunrise","sunset","Dashboard","state","check","temperature","searchBar","search","bind","onInputChange","event","getLocationData","setState","parseInt","e","target","value","setWeatherData","Jumbotron","backgroundColor","FormGroup","Input","type","id","name","placeholder","onChange","Button","border","borderRadius","showPosition","position","coords","latitude","longitude","App","navigator","geolocation","getCurrentPosition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.083c5136.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction getWeather () {\r\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Dhaka, BD&appid=96990c5c335abd806ce9733346bb487c')\r\n    .then(response => response.json())\r\n    .then(data => console.log(data));\r\n    return <div></div>\r\n}\r\n\r\nclass Weather extends Component {\r\n    render () {\r\n        return getWeather();\r\n    }\r\n}\r\n\r\nexport default Weather;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nexport const MyNav = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\"><strong>V2 Weather</strong></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#\">About</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Media, Card, CardBody, CardHeader } from 'reactstrap';\r\nclass Overview extends Component {\r\n    timestampConverter(time) {\r\n        var date = new Date(time * 1000);\r\n        var hours = date.getHours();\r\n        var minutes = \"0\" + date.getMinutes();\r\n        var seconds = \"0\" + date.getSeconds();\r\n\r\n        // Will display time in 10:30:23 format\r\n        var formattedTime = hours + ' : ' + minutes.substr(-2) + ' : ' + seconds.substr(-2);\r\n\r\n        return formattedTime;\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div  className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"col-6 offset-3 d-flex justify-content-center\">\r\n                                        <Media\r\n                                        object src={\"assets/images/\" + this.props.data.icon + \".png\"}\r\n                                        style={{height: \"128px\", width: \"128px\"}}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1 className=\"capitalize\">{this.props.data.temp} Â°C, {this.props.data.description}</h1>\r\n                            </div>\r\n                            <div className=\"col-12 text-center\">\r\n                                <h3>{this.props.data.location}, {this.props.data.country}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 d-flex justify-content-center\">\r\n                        <dl className=\"row p-3\">\r\n                                <dt className=\"col-6\"><i className=\"fa fa-globe\"></i> Area</dt>\r\n                                <dd className=\"col-6\">{this.props.data.location}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fa fa-compass\"></i> Coordinates</dt>\r\n                                <dd className=\"col-6\">{this.props.data.coordinates}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-thermometer-half\"></i> Temperature</dt>\r\n                                <dd className=\"col-6\">{this.props.data.temp}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-wind\"></i> Wind</dt>\r\n                                <dd className=\"col-6\">{this.props.data.wind}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-tint\"></i> Humidity</dt>\r\n                                <dd className=\"col-6\">{this.props.data.humidity}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-sun\"></i> Sunrise</dt>\r\n                                <dd className=\"col-6\">{this.timestampConverter(this.props.data.sunrise)}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-moon\"></i> Sunset</dt>\r\n                                <dd className=\"col-6\">{this.timestampConverter(this.props.data.sunset)}</dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","    import React, { Component } from 'react';\r\n    import { Jumbotron, Form, FormGroup, Input, Button } from 'reactstrap';\r\n    import Overview from './overview';\r\n    class Dashboard extends Component {\r\n        constructor (props) {\r\n            super(props);\r\n            \r\n            this.state = {\r\n                check: true,\r\n                location: \"Kishoreganj, Dhaka\",\r\n                country: \"Bangladesh\",\r\n                coordinates: \"--\",\r\n                temperature: \"--\",\r\n                wind: \"--\",\r\n                humidity: \"--\",\r\n                sunrise: \"--\",\r\n                sunset:\"--\",\r\n                description: \"--\",\r\n                icon: \"unknown\",\r\n                searchBar: \"\"\r\n            }\r\n\r\n            this.search = this.search.bind(this);\r\n            this.onInputChange = this.onInputChange.bind(this);\r\n        }\r\n\r\n        search(event) {\r\n            console.log(\"Pushed\")\r\n            this.getLocationData(this.state.searchBar);\r\n        }\r\n\r\n        setWeatherData(data) {\r\n            console.log(\"Temp\" + data[\"main\"][\"temp\"])\r\n            this.setState({temperature: parseInt(data[\"main\"][\"temp\"]) - 273})\r\n            this.setState({location: data[\"name\"]})\r\n            this.setState({country: data[\"sys\"][\"country\"]})\r\n            this.setState({coordinates: data[\"coord\"][\"lat\"] + \"Â°, \" + data[\"coord\"][\"lon\"] + \"Â°\"})\r\n            this.setState({wind: data[\"wind\"][\"deg\"] + \"Â°, \" + data[\"wind\"][\"speed\"] + \" mps\"})\r\n            this.setState({humidity: data[\"main\"][\"humidity\"] + \"%\"})\r\n            this.setState({sunrise: data[\"sys\"][\"sunrise\"]})\r\n            this.setState({sunset: data[\"sys\"][\"sunset\"]})\r\n            this.setState({description: data[\"weather\"][0][\"description\"]})\r\n            this.setState({icon: data[\"weather\"][0][\"icon\"]})\r\n        }\r\n\r\n        onInputChange (e) {\r\n            this.setState({searchBar: e.target.value});\r\n            console.log(e.target.value)\r\n        }\r\n\r\n        getLocationData(location) {\r\n            fetch('https://api.openweathermap.org/data/2.5/weather?q=' + location + '&appid=96990c5c335abd806ce9733346bb487c')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Checking if area exists\r\n                if (data[\"cod\"] == 200)\r\n                    this.setWeatherData(data);\r\n            });\r\n        }\r\n\r\n        render() {\r\n            if (this.state.check) {\r\n                this.getLocationData(this.state.location);\r\n                this.setState({check: false});\r\n            }\r\n            return (\r\n                <Jumbotron style={{backgroundColor: '#9575cd'}}>\r\n                    <Overview data={{\r\n                        temp: this.state.temperature,\r\n                        location: this.state.location,\r\n                        country: this.state.country,\r\n                        humidity: this.state.humidity,\r\n                        coordinates: this.state.coordinates,\r\n                        sunrise: this.state.sunrise,\r\n                        sunset: this.state.sunset,\r\n                        wind: this.state.wind,\r\n                        description: this.state.description,\r\n                        icon: this.state.icon                       \r\n                    }}/> \r\n                    \r\n                    <div className=\"col-12 col-md-6 offset-md-3 mt-4\">\r\n                        <div className=\"row\">\r\n                            <FormGroup className=\"col-9\">\r\n                                <Input type=\"text\"\r\n                                id=\"location\"\r\n                                name=\"location\" \r\n                                placeholder=\"Search Area\"\r\n                                value={this.state.searchBar}\r\n                                onChange={this.onInputChange} />\r\n                            </FormGroup>\r\n                            <Button\r\n                            className=\"col-3 search-btn\" \r\n                            onClick={this.search}\r\n                            style={{color: \"#000\", \r\n                                    backgroundColor: \"#ffffff\",\r\n                                    border: \"none\",\r\n                                    height: \"54px\",\r\n                                    borderRadius: \"0px 30px 30px 0px\"}}>\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                 \r\n                </Jumbotron>\r\n                \r\n            )\r\n        }\r\n    }\r\n\r\n    export default Dashboard;","import React from 'react';\nimport Weather from './weather';\nimport { MyNav } from './components/navbar';\nimport Dashboard from './components/dashboard';\nimport './App.css';\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    console.log(navigator.geolocation.getCurrentPosition(showPosition));\n  } else {\n    console.log(\"Geolocation is not supported by this browser.\");\n  }\n}\n\nfunction showPosition(position) {\n  console.log(\"Latitude: \" + position.coords.latitude +\n  \" Longitude: \" + position.coords.longitude);\n}\n\nfunction App() {\n  getLocation();\n  return (\n    <div className=\"App\">\n      <MyNav />\n      <Dashboard />\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}