{"version":3,"sources":["weather.js","components/navbar.js","components/overview.js","components/dashboard.js","App.js","index.js"],"names":["Weather","fetch","then","response","json","data","console","log","Component","MyNav","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Overview","time","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","this","icon","Media","object","src","style","height","width","temp","description","location","country","coordinates","toFixed","wind","humidity","timestampConverter","sunrise","sunset","Dashboard","state","check","temperature","searchBar","search","bind","onInputChange","getGeoLocation","showPosition","getLocationData","event","reg","RegExp","entry","exec","setState","parseFloat","e","target","value","navigator","geolocation","getCurrentPosition","position","isCoord","API_URL","split","trim","setWeatherData","Jumbotron","backgroundColor","FormGroup","Input","type","id","name","placeholder","onChange","Button","border","borderRadius","class","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496e37ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction getWeather () {\r\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Dhaka, BD&appid=96990c5c335abd806ce9733346bb487c')\r\n    .then(response => response.json())\r\n    .then(data => console.log(data));\r\n    return <div></div>\r\n}\r\n\r\nclass Weather extends Component {\r\n    render () {\r\n        return getWeather();\r\n    }\r\n}\r\n\r\nexport default Weather;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nexport const MyNav = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\"><strong>V2 Weather</strong></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#\">About</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Media, Card, CardBody, CardHeader } from 'reactstrap';\r\nclass Overview extends Component {\r\n    timestampConverter(time) {\r\n        var date = new Date(time * 1000);\r\n        var hours = date.getHours();\r\n        var minutes = \"0\" + date.getMinutes();\r\n        var seconds = \"0\" + date.getSeconds();\r\n\r\n        // Will display time in 10:30:23 format\r\n        var formattedTime = hours + ' : ' + minutes.substr(-2) + ' : ' + seconds.substr(-2);\r\n\r\n        return formattedTime;\r\n    }\r\n    render () {\r\n        console.log(this.props.data.icon)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div  className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"col-6 offset-3 d-flex justify-content-center\">\r\n                                        <Media\r\n                                        object src={\"assets/images/\" + this.props.data.icon + \".png\"}\r\n                                        style={{height: \"128px\", width: \"128px\"}}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 text-center\">\r\n                                <h1 className=\"capitalize\">{this.props.data.temp} °C, {this.props.data.description}</h1>\r\n                            </div>\r\n                            <div className=\"col-12 text-center\">\r\n                                <h3>{this.props.data.location}, {this.props.data.country}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 d-flex justify-content-center\">\r\n                        <dl className=\"row p-3\">\r\n                                <dt className=\"col-6\"><i className=\"fa fa-globe\"></i> Area</dt>\r\n                                <dd className=\"col-6\">{this.props.data.location}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fa fa-compass\"></i> Coordinates</dt>\r\n                                <dd className=\"col-6\">{this.props.data.coordinates}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-thermometer-half\"></i> Temperature</dt>\r\n                                <dd className=\"col-6\">{this.props.data.temp} °C / {(this.props.data.temp * 1.8 + 32).toFixed(1)} °F</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-wind\"></i> Wind</dt>\r\n                                <dd className=\"col-6\">{this.props.data.wind}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-tint\"></i> Humidity</dt>\r\n                                <dd className=\"col-6\">{this.props.data.humidity}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-sun\"></i> Sunrise</dt>\r\n                                <dd className=\"col-6\">{this.timestampConverter(this.props.data.sunrise)}</dd>\r\n                                <dt className=\"col-6\"><i className=\"fas fa-moon\"></i> Sunset</dt>\r\n                                <dd className=\"col-6\">{this.timestampConverter(this.props.data.sunset)}</dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","    import React, { Component } from 'react';\r\n    import { Jumbotron, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n    import Overview from './overview';\r\n    class Dashboard extends Component {\r\n        constructor (props) {\r\n            super(props);\r\n            \r\n            this.state = {\r\n                check: true,\r\n                location: \"Kishoreganj, Dhaka\",\r\n                country: \"Bangladesh\",\r\n                coordinates: \"--\",\r\n                temperature: \"--\",\r\n                wind: \"--\",\r\n                humidity: \"--\",\r\n                sunrise: \"--\",\r\n                sunset:\"--\",\r\n                description: \"--\",\r\n                icon: \"unknown\",\r\n                searchBar: \"\",\r\n            }\r\n\r\n            this.search = this.search.bind(this);\r\n            this.onInputChange = this.onInputChange.bind(this);\r\n            this.getGeoLocation = this.getGeoLocation.bind(this);\r\n            this.showPosition = this.showPosition.bind(this);\r\n            this.getLocationData = this.getLocationData.bind(this);\r\n        }\r\n\r\n        search(event) {\r\n            // regex for coordinates\r\n            const reg = new RegExp(\"^-?([1-8]?[1-9]|[1-9]0)\\\\.{1}\\\\d{1,6}\");\r\n            const entry = this.state.searchBar;\r\n\r\n            if (reg.exec(entry)) {\r\n                console.log(\"Enter\" + entry)\r\n                this.getLocationData(entry, true)\r\n            } else {\r\n                this.getLocationData(entry, false);\r\n            }\r\n        }\r\n\r\n        setWeatherData(data) {\r\n            // console.log(\"Temp\" + data[\"main\"][\"temp\"])\r\n            this.setState({temperature: (parseFloat(data[\"main\"][\"temp\"]) - 273.15).toFixed(1)})\r\n            this.setState({location: data[\"name\"]})\r\n            this.setState({country: data[\"sys\"][\"country\"]})\r\n            this.setState({coordinates: data[\"coord\"][\"lat\"] + \"°, \" + data[\"coord\"][\"lon\"] + \"°\"})\r\n            this.setState({wind: data[\"wind\"][\"deg\"] + \"°, \" + data[\"wind\"][\"speed\"] + \" mps\"})\r\n            this.setState({humidity: data[\"main\"][\"humidity\"] + \"%\"})\r\n            this.setState({sunrise: data[\"sys\"][\"sunrise\"]})\r\n            this.setState({sunset: data[\"sys\"][\"sunset\"]})\r\n            this.setState({description: data[\"weather\"][0][\"description\"]})\r\n            this.setState({icon: data[\"weather\"][0][\"icon\"]})\r\n        }\r\n\r\n        onInputChange (e) {\r\n            this.setState({searchBar: e.target.value});\r\n        }\r\n\r\n        getGeoLocation() {\r\n            if (navigator.geolocation) {\r\n                 navigator.geolocation.getCurrentPosition(this.showPosition);\r\n                } else {\r\n                console.log(\"Geolocation is not supported by this browser.\");\r\n                }\r\n        }\r\n          \r\n          showPosition(position) {\r\n              this.getLocationData(position[\"coords\"][\"latitude\"] +\",\"+position[\"coords\"][\"longitude\"], true);\r\n          }\r\n          \r\n\r\n        getLocationData(location, isCoord) {\r\n            var API_URL = \"\";\r\n\r\n            if (isCoord) {\r\n                location = location.split(\",\");\r\n                API_URL = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + location[0].trim() +\"&lon=\"+ location[1].trim() +\"&appid=96990c5c335abd806ce9733346bb487c\";\r\n            } else {\r\n                API_URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + location + '&appid=96990c5c335abd806ce9733346bb487c';\r\n            }\r\n            \r\n            fetch(API_URL)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Checking if area exists\r\n                if (data[\"cod\"] == 200)\r\n                console.log(data);\r\n                    this.setWeatherData(data);\r\n            });\r\n        }\r\n\r\n        render() {\r\n            if (this.state.check) {\r\n                this.getLocationData(this.state.location);\r\n                this.setState({check: false});\r\n            }\r\n            return (\r\n                <Jumbotron style={{backgroundColor: '#9575cd'}}>\r\n                    <Overview data={{\r\n                        temp: this.state.temperature,\r\n                        location: this.state.location,\r\n                        country: this.state.country,\r\n                        humidity: this.state.humidity,\r\n                        coordinates: this.state.coordinates,\r\n                        sunrise: this.state.sunrise,\r\n                        sunset: this.state.sunset,\r\n                        wind: this.state.wind,\r\n                        description: this.state.description,\r\n                        icon: this.state.icon                       \r\n                    }}/> \r\n                    \r\n                    <div className=\"col-12 col-md-6 offset-md-3 mt-4\">\r\n                        <div className=\"row\">\r\n                            <FormGroup className=\"col-9\">\r\n                                <Input type=\"text\"\r\n                                    id=\"location\"\r\n                                    name=\"location\" \r\n                                    placeholder=\"Input area name or coordinates\"\r\n                                    value={this.state.searchBar}\r\n                                    onChange={this.onInputChange} />                            \r\n                            </FormGroup>\r\n                            <Button\r\n                                className=\"col-3 search-btn\" \r\n                                onClick={this.search}\r\n                                style={{color: \"#000\",                                       \r\n                                        backgroundColor: \"#ffffff\",\r\n                                        border: \"none\",\r\n                                        height: \"54px\",\r\n                                        borderRadius: \"0px 30px 30px 0px\"}}>\r\n                                    Search\r\n                            </Button>                          \r\n                        </div>\r\n                        <div className=\"row\">\r\n                                <div className=\"col-12  d-flex justify-content-center\">\r\n                                    <Button\r\n                                        onClick={this.getGeoLocation}\r\n                                        style={{color: \"#000\",  \r\n                                                backgroundColor: \"#ffffff\",\r\n                                                border: \"none\",\r\n                                                height: \"54px\",\r\n                                                borderRadius: \"30px\"}}>\r\n                                            <i class=\"fas fa-map-marker-alt\"></i>&nbsp;&nbsp;Current Location\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                 \r\n                </Jumbotron>\r\n                \r\n            )\r\n        }\r\n    }\r\n\r\n    export default Dashboard;","import React from 'react';\nimport Weather from './weather';\nimport { MyNav } from './components/navbar';\nimport Dashboard from './components/dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyNav />\n      <Dashboard />\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}